class Cart { constructor() { this.items = JSON.parse(localStorage.getItem('cart')) || []; this.updateBadge(); } add(p) { const e = this.items.find(i=>i.id===p.id); e ? e.quantity++ : this.items.push({...p, quantity:1}); this.save(); } remove(id) { this.items = this.items.filter(i=>i.id!==id); this.save(); } updateQuantity(id, qty) { const i = this.items.find(x=>x.id===id); if(i) i.quantity = qty>0?qty:1; this.save(); } getTotal() { return this.items.reduce((s,i)=>s+i.price*i.quantity,0); } save() { localStorage.setItem('cart', JSON.stringify(this.items)); this.updateBadge(); if(location.pathname.includes('cart.html')) this.render(); } updateBadge() { const badge = document.getElementById('cart-badge'); if (badge) { const total = this.items.reduce((s,i)=>s+i.quantity,0); badge.textContent = total; badge.style.display = total > 0 ? 'flex' : 'none'; } } render() { const c = document.getElementById('cart-items'), t = document.getElementById('cart-total'); if(!c) return; if(this.items.length===0) { c.innerHTML='<p style="text-align:center;padding:2rem;">Корзина пуста</p>'; t.textContent='0 ₽'; return; } c.innerHTML = this.items.map(i=>` <div class="cart-item" style="display:flex;align-items:center;gap:1rem;padding:1rem 0;border-bottom:1px solid #eee;"> <img src="${i.image}" alt="${i.name}" style="width:80px;height:80px;object-fit:cover;border-radius:6px;"> <div style="flex:1;"> <h4 style="margin:0;font-size:1rem;">${i.name}</h4> <p style="margin:0.3rem 0;color:var(--primary);font-weight:bold;">${i.price.toLocaleString()} ₽</p> </div> <input type="number" value="${i.quantity}" min="1" style="width:50px;text-align:center;padding:0.3rem;" onchange="cart.updateQuantity('${i.id}',this.value)"> <button class="btn" style="background:#ddd;color:#333;padding:0.4rem 0.8rem;font-size:0.9rem;" onclick="cart.remove('${i.id}')">×</button> </div> `).join(''); t.textContent = this.getTotal().toLocaleString() + ' ₽'; } } const cart = new Cart(); document.addEventListener('click', e => { if (e.target.matches('.add-to-cart') || e.target.closest('.add-to-cart')) { const btn = e.target.matches('.add-to-cart') ? e.target : e.target.closest('.add-to-cart'); cart.add({ id: btn.dataset.id, name: btn.dataset.name, price: parseInt(btn.dataset.price), image: btn.dataset.image }); alert('Добавлено в корзину!'); } }); document.getElementById('order-form')?.addEventListener('submit', e => { e.preventDefault(); if (cart.items.length === 0) return alert('Корзина пуста!'); alert('Заказ оформлен! Мы свяжемся с вами.'); localStorage.removeItem('cart'); cart.items = []; cart.updateBadge(); e.target.reset(); cart.render(); }); if (location.pathname.includes('cart.html')) cart.render();